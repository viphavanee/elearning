<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/public/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/public/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/favicon-16x16.png">
    <link rel="manifest" href="/public/site.webmanifest">
    <title>Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
    <script src="https://kit.fontawesome.com/da08a429d6.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/public/css/form.css">
    <link rel="stylesheet" href="/public/css/table.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
    <script src="https://kit.fontawesome.com/da08a429d6.js" crossorigin="anonymous"></script>
    <link href="/public/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
        rel="stylesheet">
    <link href="/public/css/sb-admin-2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        integrity="sha512-vT5UMPFvujzKqG/Hoj1+0Tk38fANyEelFoOAJu7+8hpA+gSJJi+1WG9CvjKr+J75N8/KDnAMrZbGU9aAAqJ5NA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="/public/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* Style for the column containing the select dropdown */
        .col-md-4 {
            margin-bottom: 15px;
        }

        /* Style the label to make it stand out */
        .form-label {
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
            font-size: 1rem;
            display: block;
        }

        /* Style the select input field */
        .form-select {
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1rem;
            width: 100%;
            background-color: #fff;
        }

        @media (max-width: 768px) {

            #preChart,
            #postChart {
                height: 100%;
                /* Adjust height for smaller screens */
                width: 100%;
                /* Make charts responsive */
            }

        }

        @media (max-width: 390px) {

            #preChart,
            #postChart {
                height: 100%;
                /* Adjust height for smaller screens */
                width: 100%;
                /* Make charts responsive */
            }
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin-right: -0.75rem;
            margin-left: -0.75rem;
            justify-content: center;
        }

        @media (max-width: 1023px) {
            .d-flex {
                display: flex !important;
                flex-wrap: wrap;
            }
        }
    </style>

</head>

<body id="page-top">
    <div id="wrapper">
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/">
                <div class="sidebar-brand-text mx-3" style="font-size: 15.5px;">STD<span
                        style="font-size: 12px;">s</span> E-learning</div>
            </a>
            <hr class="sidebar-divider my-0">
            <li class="nav-item active">
                <a class="nav-link" href="#" id="dashboardLink">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/lesson/tchr">
                    <i class="fas fa-book"></i>
                    <span>บทเรียน</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/quizAdmin/tchr">
                    <i class="fas fa-book-open"></i>
                    <span>แบบทดสอบ</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/news/tchr">
                    <i class="fas fa-newspaper"></i>
                    <span>บทความ</span></a>
            </li>
            <li class="nav-item">
                <a id="attemptLink" class="nav-link" href="/attempt/list">
                    <i class="fa-solid fa-chart-simple"></i>
                    <span>คะแนน</span></a>
            </li>
            <li class="nav-item ">
                <a id="classroomLink" class="nav-link" href="#">
                    <i class="fas fa-chalkboard-user"></i>
                    <span>จัดการห้องเรียน</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" id="progressLink">
                    <i class="fa-solid fa-list-check"></i>
                    <span>ติดตามผลการเรียน</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/theme/teacher">
                    <i class="fas fa-question"></i>
                    <span>กระทู้ถาม-ตอบ</span></a>
            </li>
        </ul>

        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 shadow">
                    <form class="form-inline">
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>
                    </form>
                    <!-- notify -->
                    <div class="d-flex justify-content-end w-100">
                        <div class="dropdown no-arrow">
                            <a class="text-decoration-none dropdown-toggle text-secondary mx-3" href="#" id="notifyLink"
                                role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fa-solid fa-bell" style="font-size: 1.5em;"></i>
                                <span
                                    class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger text-white d-none"
                                    id="notifyCount"></span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-right mt-3" id="notifyDropdown">
                                <li class="dropdown-item text-muted">ไม่พบการแจ้งเตือนใหม่</li>
                            </ul>
                        </div>
                    </div>
                    <ul class="navbar-nav ml-auto">
                        <div class="topbar-divider d-none d-sm-block"></div>
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <div class="d-flex flex-column align-items-end">
                                    <span id="userFirstname" class="mr-2 d-none d-lg-inline text-gray-800"></span>
                                    <span id="userRole" class="mr-2 d-none d-lg-inline text-gray-600 small"></span>
                                </div>
                                <i class="fa fa-user-circle-o fa-2x"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="#" id="profile-link">
                                    <i class=" fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                    แก้ไขโปรไฟล์
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" id="logout" data-toggle="modal"
                                    data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>
                    </ul>
                </nav>

                <div class="container-fluid">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3" style="background-color:#4e73df; color:white;">
                            <h6 class="m-0 font-weight-bold">Dashboard</h6>
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <!-- First Column: Student Count -->
                                <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                    <div class="card p-3 shadow-sm bg-light h-100 d-flex justify-content-center">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="mr-3">
                                                <p class="h2" style="color: #0F52BA;">
                                                    <%= stdCount %>
                                                </p>
                                                <p class="h5">จำนวนนักเรียน</p>
                                            </div>
                                            <img src="/public/img/std.png" alt="student" />
                                        </div>
                                    </div>
                                </div>

                                <!-- Second Column: Lesson Count -->
                                <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                    <div class="card p-3 shadow-sm bg-light h-100 d-flex justify-content-center">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="mr-3">
                                                <p class="h2" style="color: #0F52BA;">
                                                    <%= lessonCount %>
                                                </p>
                                                <p class="h5">จำนวนบทเรียน</p>
                                            </div>
                                            <img src="/public/img/lesson.png" alt="lesson" />
                                        </div>
                                    </div>
                                </div>

                                <!-- Third Column: Classroom Count -->
                                <div class="col-lg-4 col-md-12 col-sm-12 mb-3">
                                    <div class="card p-3 shadow-sm bg-light h-100 d-flex justify-content-center">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="mr-3">
                                                <p class="h2" style="color: #0F52BA;">
                                                    <%= classroomCount %>
                                                </p>
                                                <p class="h5">จำนวนห้องเรียน</p>
                                            </div>
                                            <img src="/public/img/classroom.png" alt="classroom" />
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- Pie chart -->
                        <div class="card bg-light shadow-sm p-3 m-3">
                            <div class="card-header text-center">
                                <h3 class="fw-bold">สรุปผลการสอบ</h3>
                            </div>

                            <!-- Filter Section -->
                            <div class="card-body">
                                <form id="filterFormPie" class="row g-3">
                                    <div class="col-md-4 d-none">
                                        <label for="teacherSelect" class="form-label">เลือกอาจารย์:</label>
                                        <input id="teacherSelect" class="form-select" value="<%- teacherId %>"
                                            aria-label="Teacher Select" />
                                    </div>

                                    <div class="col-md-4">
                                        <label for="classroomSelect" class="form-label">เลือกห้องเรียน:</label>
                                        <select id="classroomSelect" class="form-select" aria-label="Classroom Select">
                                        </select>
                                    </div>

                                    <div class="col-md-4">
                                        <label for="lessonFilter" class="form-label">เลือกบทเรียน:</label>
                                        <select id="lessonFilter" class="form-select" aria-label="Lesson Filter">
                                            <% lesson.forEach(function(lesson) { %>
                                                <option value="<%= lesson.lessonNum %>">
                                                    <%= lesson.lessonNum %> - <%= lesson.lessonName %>
                                                </option>
                                                <% }); %>
                                        </select>
                                    </div>
                                </form>
                            </div>
                            <!-- Chart Section -->
                            <div class="card-body">
                                <div class="row justify-content-between">
                                    <div class="col-md-5">
                                        <div id="preChart" style="height: 350px;"></div>
                                    </div>
                                    <div class="col-md-5">
                                        <div id="postChart" style="height: 350px;"></div>
                                    </div>
                                </div>

                                <!-- Button to trigger chart update -->
                                <div class="d-flex justify-content-center mt-3">
                                    <button id="updateChartBtn" class="btn btn-primary"><i
                                            class="fa-solid fa-rotate-right"></i></button>
                                </div>
                            </div>
                        </div>

                        <!-- Column chart -->
                        <div class="card bg-light shadow-sm p-3 m-3">
                            <div class="card-header text-center">
                                <h3 class="fw-bold">เปรียบเทียบคะแนน</h3>
                            </div>

                            <!-- Filter Section -->
                            <div class="card-body">
                                <form id="filterFormCol" class="row g-3">
                                    <div class="col-md-4 d-none">
                                        <label for="teacherSelectCol" class="form-label">เลือกอาจารย์:</label>
                                        <input id="teacherSelectCol" class="form-select" value="<%- teacherId %>"
                                            aria-label="Teacher Select" />

                                    </div>

                                    <div class="col-md-4">
                                        <label for="classroomSelectCol" class="form-label">เลือกห้องเรียน:</label>
                                        <select id="classroomSelectCol" class="form-select"
                                            aria-label="Classroom Select">
                                        </select>
                                    </div>

                                    <div class="col-md-4">
                                        <label for="lessonFilterCol" class="form-label">เลือกบทเรียน:</label>
                                        <select id="lessonFilterCol" class="form-select" aria-label="Lesson Filter">
                                            <% lesson.forEach(function(lesson) { %>
                                                <option value="<%= lesson.lessonNum %>">
                                                    <%= lesson.lessonNum %> - <%= lesson.lessonName %>
                                                </option>
                                                <% }); %>
                                        </select>
                                    </div>
                                </form>
                            </div>

                            <!-- Chart Section -->
                            <div class="card-body">
                                <div class="row justify-content-between">
                                    <div class="col-md-12">
                                        <div id="columnChart" style="height: 350px;"></div>
                                    </div>
                                </div>

                                <!-- Button to trigger chart update -->
                                <div class="d-flex justify-content-center mt-3">
                                    <button id="updateChartColBtn" class="btn btn-primary"><i
                                            class="fa-solid fa-rotate-right"></i></button>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>



            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; STD<span style="font-size: 12px;">s</span> E-learning</span>
                    </div>
                </div>
            </footer>
        </div>

    </div>
    </div>
    <script src="
    https://cdn.jsdelivr.net/npm/jwt-decode@4.0.0/build/cjs/index.min.js"></script>
    <script src="/public/vendor/jquery/jquery.min.js"></script>
    <script src="/public/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/public/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="/public/js/sb-admin-2.min.js"></script>
    <script src="/public/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="/public/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="/public/js/demo/datatables-demo.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/public/js/notification.js"></script>
    <script src="/public/vendor/jquery/jquery.min.js"></script>
    <script src="/public/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/public/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="/public/js/sb-admin-2.js"></script>
    <script src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.1/js/dataTables.bootstrap4.min.js"></script>


    <script>
        // Parse data from server-side rendering
        const groupedData = <%- JSON.stringify(groupedData) %>;
        const attempts = <%- JSON.stringify(attempts) %>;

        const teacherSelect = document.getElementById("teacherSelect");
        const classroomSelect = document.getElementById("classroomSelect");
        const lessonSelect = document.getElementById("lessonFilter");
        const teacherSelectCol = document.getElementById("teacherSelectCol");
        const classroomSelectCol = document.getElementById("classroomSelectCol");
        const lessonSelectCol = document.getElementById("lessonFilterCol");

        let stdCount = <%- stdCount %>;

        // Initialize charts
        let preChart, postChart, columnChart;

        // ฟังก์ชันเติมข้อมูลห้องเรียน
        function populateClassrooms(teacherId, classroomSelectEl, lessonSelectEl) {
            classroomSelectEl.innerHTML = ""; // เคลียร์ค่าก่อนหน้า
            classroomSelectEl.disabled = true;
            lessonSelectEl.value = "1";
            lessonSelectEl.disabled = false;

            if (teacherId) {
                const selectedTeacher = groupedData.find(t => t._id === teacherId);
                if (selectedTeacher && Array.isArray(selectedTeacher.classrooms)) {
                    selectedTeacher.classrooms.forEach((classroom, index) => {
                        const option = document.createElement("option");
                        option.value = classroom.roomCode;
                        option.textContent = classroom.classroomName || "Unnamed Classroom";
                        classroomSelectEl.appendChild(option);

                        if (index === 0) {
                            classroomSelectEl.value = classroom.roomCode;
                        }
                    });
                    classroomSelectEl.disabled = false;
                }
            }
        }
        function populateClassroomsCol(teacherId) {
            classroomSelectCol.innerHTML = ""; // เคลียร์ข้อมูลเก่า
            classroomSelectCol.disabled = true;
            lessonSelectCol.value = "1"; // ตั้งค่าเริ่มต้นของ lesson filter
            lessonSelectCol.disabled = false;

            console.log("Populate ClassroomsCol for Teacher ID:", teacherId);

            if (teacherId) {
                const selectedTeacher = groupedData.find(t => t._id === teacherId);

                console.log("Selected Teacher Data:", selectedTeacher);

                if (selectedTeacher && Array.isArray(selectedTeacher.classrooms) && selectedTeacher.classrooms.length > 0) {
                    selectedTeacher.classrooms.forEach((classroom, index) => {
                        const option = document.createElement("option");
                        option.value = classroom.roomCode;
                        option.textContent = classroom.classroomName || "Unnamed Classroom";
                        classroomSelectCol.appendChild(option);
                    });

                    // เลือกห้องแรกเป็นค่าเริ่มต้น
                    classroomSelectCol.value = selectedTeacher.classrooms[0].roomCode;
                    classroomSelectCol.disabled = false;

                    fetchStudentCountCol(); // โหลดจำนวนนักเรียนสำหรับห้องแรก
                }
            }
        }
        teacherSelectCol.addEventListener("change", function () {
            const teacherId = this.value;
            console.log("Teacher Selected (Column Chart):", teacherId);
            populateClassroomsCol(teacherId);
            fetchStudentCountCol();
        });

        document.addEventListener("DOMContentLoaded", function () {
            if (groupedData.length > 0) {
                teacherSelectCol.value = groupedData[0]._id;
                populateClassroomsCol(groupedData[0]._id);
            }
        });
        // ฟังก์ชันดึงจำนวนนักเรียน
        async function fetchStudentCount(classroomSelectEl) {
            if (!classroomSelectEl.value) return;
            try {
                const response = await fetch(`/user/getstdcount/${classroomSelectEl.value}`);
                if (!response.ok) throw new Error("Failed to fetch student count");
                stdCount = await response.json();
            } catch (error) {
                console.error("Error fetching student count:", error);
                stdCount = 0;
            }
        }

        // ฟังก์ชันกรองข้อมูล Pre/Post-Test
        function prepareChartData(roomCode, lessonNum, attemptType) {
            const filteredAttempts = attempts.filter(item =>
                item.roomCode === roomCode &&
                parseInt(item.lessonNum, 10) === parseInt(lessonNum, 10) &&
                item.attemptType === attemptType
            );

            const passCount = filteredAttempts.filter(item => item.totalScore >= 5).length;
            const failCount = filteredAttempts.filter(item => item.totalScore < 5).length;
            const notExamCount = Math.max(0, stdCount - (passCount + failCount));

            return { pass: passCount, fail: failCount, notExam: notExamCount };
        }

        // ฟังก์ชันหาคะแนนต่ำสุด-สูงสุดของ Pre/Post-Test
        function prepareChartColumn(roomCode, lessonNum) {
            const preAttempts = attempts.filter(item =>
                item.roomCode === roomCode &&
                parseInt(item.lessonNum, 10) === parseInt(lessonNum, 10) &&
                item.attemptType === "pre"
            );

            const postAttempts = attempts.filter(item =>
                item.roomCode === roomCode &&
                parseInt(item.lessonNum, 10) === parseInt(lessonNum, 10) &&
                item.attemptType === "post"
            );

            const preScores = preAttempts.length ? preAttempts.map(item => item.totalScore) : [0];
            const postScores = postAttempts.length ? postAttempts.map(item => item.totalScore) : [0];

            return {
                preMin: Math.min(...preScores),
                preMax: Math.max(...preScores),
                postMin: Math.min(...postScores),
                postMax: Math.max(...postScores)
            };
        }

        // ฟังก์ชันสร้าง Pie Chart
        function renderPieChart(chartData, elementId, titleText) {
            const options = {
                chart: { type: "pie", height: 350 },
                series: [chartData.pass, chartData.fail, chartData.notExam],
                labels: ["ผ่าน", "ไม่ผ่าน", "ยังไม่สอบ"],
                colors: ["#4CAF50", "#F44336", "#D3D3D3"],
                title: { text: titleText, align: "center", margin: 10 }
            };

            const chart = new ApexCharts(document.querySelector(`#${elementId}`), options);
            chart.render();
            return chart;
        }

        // ฟังก์ชันสร้าง Column Chart
        function renderColumnChart(elementId) {
            const options = {
                chart: { type: "bar", height: 350 },
                series: [
                    { name: "ต่ำสุด", data: [0, 0] },
                    { name: "สูงสุด", data: [0, 0] }
                ],
                labels: ["คะแนนก่อนเรียน", "คะแนนหลังเรียน"],
                title: { text: "คะแนนต่ำสุด-สูงสุด", align: "center" }
            };

            const chart = new ApexCharts(document.querySelector(`#${elementId}`), options);
            chart.render();
            return chart;
        }

        // ฟังก์ชันอัปเดต Pie Chart
        async function updateChart() {
            await fetchStudentCount(classroomSelect);
            const lessonNum = lessonSelect.value;
            if (!lessonNum) return;

            const preData = prepareChartData(classroomSelect.value, lessonNum, "pre");
            const postData = prepareChartData(classroomSelect.value, lessonNum, "post");

            preChart.updateSeries([preData.pass, preData.fail, preData.notExam]);
            postChart.updateSeries([postData.pass, postData.fail, postData.notExam]);
        }

        // ฟังก์ชันอัปเดต Column Chart
        async function updateChartCol() {
            await fetchStudentCount(classroomSelectCol);
            const lessonNum = lessonSelectCol.value;
            if (!lessonNum) return;

            const scoreData = prepareChartColumn(classroomSelectCol.value, lessonNum);
            columnChart.updateSeries([
                { name: "ต่ำสุด", data: [scoreData.preMin, scoreData.preMax] },
                { name: "สูงสุด", data: [scoreData.postMin, scoreData.postMax] }
            ]);
        }

        // Event Listeners
        teacherSelect.addEventListener("change", () => populateClassrooms(teacherSelect.value, classroomSelect, lessonSelect));
        teacherSelectCol.addEventListener("change", () => populateClassrooms(teacherSelectCol.value, classroomSelectCol, lessonSelectCol));
        classroomSelect.addEventListener("change", updateChart);
        classroomSelectCol.addEventListener("change", updateChartCol);
        lessonSelect.addEventListener("change", updateChart);
        lessonSelectCol.addEventListener("change", updateChartCol);
        document.getElementById("updateChartBtn").addEventListener("click", updateChart);
        document.getElementById("updateChartColBtn").addEventListener("click", updateChartCol);

        // Initialize charts on page load
        document.addEventListener("DOMContentLoaded", function () {
            preChart = renderPieChart({ pass: 0, fail: 0, notExam: 0 }, "preChart", "Pre-Test Results");
            postChart = renderPieChart({ pass: 0, fail: 0, notExam: 0 }, "postChart", "Post-Test Results");
            columnChart = renderColumnChart("columnChart");

            if (groupedData.length > 0) {
                teacherSelect.value = groupedData[0]._id;
                populateClassrooms(groupedData[0]._id, classroomSelect, lessonSelect);
            }
        });
    </script>

    <script src="
   https://cdn.jsdelivr.net/npm/jwt-decode@4.0.0/build/cjs/index.min.js"></script>
    <script>
        // Ensure the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', function () {
            const token = localStorage.getItem('token');
            const decodedToken = jwtDecode(token); // Decodes the JWT token

            // Assuming userId is a field in your token
            const userId = decodedToken.userId;
            if (userId) {
                // Set the href attribute with the userId
                const classroomLink = document.getElementById('classroomLink');
                const attemptLink = document.getElementById('attemptLink');
                const progressLink = document.getElementById('progressLink');
                const dashboardLink = document.getElementById('dashboardLink');
                const profileLink = document.getElementById('profile-link');
                profileLink.href = `/profile/${userId}`;
                dashboardLink.href = `/teacher/dashboard/${userId}`;
                progressLink.href = `/progress/${userId}`;
                classroomLink.href = `/classroom/teacher/${userId}`;
                attemptLink.href = `/attempt/list/${userId}`;
            }
             // Fetch notifications
             fetchNotifications(userId);
        });
    </script>
    <script src="/public/js/profileDetail.js"></script>
    <script src="/public/js/logout.js"></script>
    <script src="/public/js/teacherRoleCheck.js"></script><!-- Check teacher role -->
    <script src="/public/js/tokenChecked.js"></script><!-- Check login -->

</body>

</html>
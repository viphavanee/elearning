<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>จัดการห้องเรียน</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
    <script src="https://kit.fontawesome.com/da08a429d6.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/public/css/form.css">
    <link rel="stylesheet" href="/public/css/table.css">
    <link href="/public/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
    <link href="/public/css/sb-admin-2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        integrity="sha512-vT5UMPFvujzKqG/Hoj1+0Tk38fANyEelFoOAJu7+8hpA+gSJJi+1WG9CvjKr+J75N8/KDnAMrZbGU9aAAqJ5NA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="/public/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body id="page-top">
    <div id="wrapper">
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/adminHome">
                <div class="sidebar-brand-text mx-3" style="font-size: 15.5px;">Sexual learning</div>
            </a>
            <hr class="sidebar-divider my-0">
            <li class="nav-item">
                <a class="nav-link" href="/index">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span></a>
            </li>
            <hr class="sidebar-divider">
            <li class="nav-item">
                <a class="nav-link" href="/lesson/tchr">
                    <i class="fas fa-book"></i>
                    <span>บทเรียน</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/quizAdmin/tchr">
                    <i class="fas fa-book-open"></i>
                    <span>แบบทดสอบ</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/newsAdmin/tchr">
                    <i class="fas fa-newspaper"></i>
                    <span>บทความ</span></a>
            </li>
            <li class="nav-item">
                <a id="attemptLink" class="nav-link" href="/attempt/list">
                   <i class="fas fa-chalkboard-user"></i>
                   <span>คะแนน</span></a>
             </li>    
            <li class="nav-item active">
                <a id="classroomLink" class="nav-link" href="#">
                    <i class="fas fa-chalkboard-user"></i>
                    <span>จัดการห้องเรียน</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="fas fa-question"></i>
                    <span>กระทู้ถาม-ตอบ</span></a>
            </li>


        </ul>
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
                    <form class="form-inline">
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>
                    </form>
                    <form
                        class="d-none d-sm-inline-block form-inline mr-auto ml-md-10 my-2 my-md-0 mw-100 navbar-search">
                        <div class="input-group">
                            <input type="text" class="form-control bg-light border-0 small" placeholder="ค้นหา..."
                                aria-label="Search" aria-describedby="basic-addon2">
                            <div class="input-group-append">
                                <button class="btn btn-primary mr-auto" type="button">
                                    <i class="fas fa-search fa-sm"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                    <ul class="navbar-nav ml-auto">

                        <div class="topbar-divider d-none d-sm-block"></div>
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown"
                              aria-haspopup="true" aria-expanded="false">
                              <div class="d-flex flex-column align-items-end">
                                <span id="userFirstname" class="mr-2 d-none d-lg-inline text-gray-800"></span>
                                <span id="userRole" class="mr-2 d-none d-lg-inline text-gray-600 small"></span>
                              </div>
                              <i class="fa fa-user-circle-o fa-2x"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                              <a class="dropdown-item" href="#">
                                <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                แก้ไขโปรไฟล์
                              </a>
                              <div class="dropdown-divider"></div>
                              <a class="dropdown-item" href="#" id="logout" data-toggle="modal" data-target="#logoutModal">
                                <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                Logout
                              </a>
                            </div>
                          </li>
                    </ul>
                </nav>
                <div class="container-fluid">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-dark">
                                จัดการห้องเรียน
                            </h6>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-primary" id="btnCreate" data-toggle="modal"
                                data-target="#createClassroomModal">สร้างห้องเรียน</button>
                            <div class="row row-cols-1 row-cols-md-3 g-4">
                                <% if (classroom && classroom.length> 0) { %>
                                    <% classroom.forEach(function(classroom) { %>
                                        <div class="col">
                                            <div class="card h-100">
                                                <% if (classroom.image && classroom.image.length> 0) { %>
                                                    <img src="data:image/png;base64,<%= classroom.image %>"
                                                        class="card-img-top classroom-image" alt="classroom Image"
                                                        height="200px" />
                                                    <% } else { %>
                                                        <img src="..." class="card-img-top" alt="ไม่พบรูป" />
                                                        <% } %>
                                                            <div class="card-body">
                                                                <p class="text-secondary">
                                                                    CODE: <%= classroom.roomCode %>

                                                                        <h5 class="card-title">
                                                                            <%= classroom.classroomName %>
                                                                        </h5>
                                                                        <% if (teacher) { %>
                                                                            <p class="card-text">
                                                                                <%= teacher.firstname %>
                                                                                    <%= teacher.lastname %>
                                                                            </p>
                                                                            <% } else { %>
                                                                                <p class="card-text">Teacher data not
                                                                                    available
                                                                                </p>
                                                                                <% } %>
                                                            </div>
                                                            <div class="card-footer d-flex justify-content-between">
                                                                <a href="/classroom/id/<%= classroom._id %>"
                                                                    class="btn btn-secondary">
                                                                    <i class="fas fa-circle-info"></i> details
                                                                </a>
                                                                <button type="button" class="btn btn-primary edit-btn"
                                                                    data-toggle="modal"
                                                                    data-target="#editClassroomModal"
                                                                    data-id="<%= classroom._id %>">
                                                                    <i class="fas fa-pen-square"></i> Edit
                                                                </button>
                                                                <a href="#" class="btn btn-danger delete-btn"
                                                                    data-id="<%= classroom._id %>"
                                                                    data-teacher-id="<%= classroom.teacherId %>">
                                                                    <i class="fas fa-trash"></i> Delete
                                                                </a>


                                                            </div>
                                            </div>
                                        </div>
                                        <% }); %>
                                            <% } else { %>
                                                <p>No classrooms found</p>
                                                <% } %>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    <div class="modal fade" id="createClassroomModal" tabindex="-1" role="dialog"
        aria-labelledby="createClassroomModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createClassroomModalLabel">สร้างห้องเรียน</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="createClassroomForm" style="margin: 0; width: 100%;" enctype="multipart/form-data">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="classroomName">ชื่อห้องเรียน</label>
                            <input type="text" name="classroomName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="feature_image">รูปภาพ</label>
                            <input type="file" id="feature_image" name="feature_image" class="form-control" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">ปิด</button>
                        <button type="submit" name="submit" class="btn btn-primary">บันทึก</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const editButtons = document.querySelectorAll('.edit-btn');
            editButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const classroomId = this.getAttribute('data-id');
                    try {
                        // Fetch the classroom data using the classroom ID
                        const response = await fetch(`/classroom/edit/${classroomId}`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const classroomResponse = await response.json();

                        // Check if classroom data is available
                        if (classroomResponse.data) {
                            const classroom = classroomResponse.data;
                            // Populate the modal form with the classroom data
                            document.getElementById('editClassroomName').value = classroom.classroomName;
                            document.getElementById('editClassroomId').value = classroom._id;
                            document.getElementById('editClassroomTeacherId').value = classroom.teacherId;
                            // You can continue populating other fields here if needed
                        } else {
                            console.error('Classroom data not available');
                        }

                    } catch (error) {
                        console.error('Error fetching classroom data:', error);
                    }
                });
            });
        });
    </script>

    <div class="modal fade" id="editClassroomModal" tabindex="-1" role="dialog"
        aria-labelledby="editClassroomModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editClassroomModalLabel">แก้ไขห้องเรียน</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="editClassroomForm" style="margin: 0; width: 100%;" enctype="multipart/form-data">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="editClassroomName">ชื่อห้องเรียน</label>
                            <input type="text" id="editClassroomName" name="classroomName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="editFeatureImage">รูปภาพ</label>
                            <input type="file" id="editFeatureImage" name="image" class="form-control" />
                        </div>
                    </div>
                    <input type="hidden" id="editClassroomId" name="classroomId" value="" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">ปิด</button>
                        <button type="submit" class="btn btn-primary">บันทึก</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="/public/vendor/jquery/jquery.min.js"></script>
    <script src="/public/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/public/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="/public/js/sb-admin-2.min.js"></script>
    <script src="/public/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="/public/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="/public/js/datatables-demo.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script type="application/javascript" src="/tinymce/tinymce.min.js"></script>
    <script src="/public/js/tinymceInit.js"></script>
    <script src="/public/js/script.js"></script>
    <script src="/public/js/getdata.js"></script>
    <script src="
    https://cdn.jsdelivr.net/npm/jwt-decode@4.0.0/build/cjs/index.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const createForm = document.getElementById('createClassroomForm');
            const editForm = document.getElementById('editClassroomForm');

            createForm.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(createForm);
                const token = localStorage.getItem('token');
                const decodedToken = jwtDecode(token); // Adjust this according to your token structure
                const userId = decodedToken.userId; // Assuming userId is a field in your token
                try {
                    if (!token) {
                        throw new Error('Token not found in localStorage');
                    }

                    const response = await fetch('/classroom/createClassroom', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        },
                        body: formData
                    });

                    if (response.ok) {

                        $('#createClassroomModal').modal('hide');
                        location.reload();
                        // Optionally, you can reload the classroom list or perform other actions
                    } else {
                        const errorData = await response.json();
                        console.error('Error creating classroom:', errorData.error);
                        alert('Failed to create classroom: ' + errorData.error);
                    }
                } catch (error) {
                    console.error('Error creating classroom:', error);
                    alert('An error occurred: ' + error.message);
                }
            });

            editForm.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(editForm);
                const token = localStorage.getItem('token');

                try {
                    if (!token) {
                        throw new Error('Token not found in localStorage');
                    }

                    const classroomId = formData.get('classroomId'); // Assuming you have a hidden field for classroom ID

                    const response = await fetch(`/classroom/edit/${classroomId}`, {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        },
                        body: formData
                    });

                    if (response.ok) {
                        Swal.fire({
                            title: 'การอัพเดทห้องเรียนสำเร็จ',
                            icon: 'success',
                            confirmButtonText: 'ต่อไป',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $('#editClassroomModal').modal('hide');
                                location.reload();
                            }
                        });
                        // Optionally, you can reload the classroom list or perform other actions
                    } else {
                        const errorData = await response.json();
                        console.error('Error editing classroom:', errorData.error);
                        alert('Failed to edit classroom: ' + errorData.error);
                    }
                } catch (error) {
                    console.error('Error editing classroom:', error);
                    alert('An error occurred: ' + error.message);
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent the default link behavior

                    const classroomId = this.getAttribute('data-id');
                    const teacherId = this.getAttribute('data-teacher-id');

                    Swal.fire({
                        title: "คุณต้องการลบห้องเรียนนี้ใช่หรือไม่?",
                        text: "การลบจะไม่สามารถกู้คืนได้!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonText: 'ใช่',
                        cancelButtonText: 'ไม่'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Redirect to delete URL if confirmed
                            window.location.href = `/classroom/delete/${classroomId}/${teacherId}`;
                        }
                    });
                });
            });
        });
    </script>
  
   <script>
    // Ensure the DOM is fully loaded
    document.addEventListener('DOMContentLoaded', function () {
       const token = localStorage.getItem('token');
       const decodedToken = jwtDecode(token); // Decodes the JWT token

       // Assuming userId is a field in your token
       const userId = decodedToken.userId;
       if (userId) {
          // Set the href attribute with the userId
          const classroomLink = document.getElementById('classroomLink');
          const attemptLink = document.getElementById('attemptLink');
          classroomLink.href = `/classroom/teacher/${userId}`;
          attemptLink.href = `/attempt/list/${userId}`;
       }
    });
 </script>
 <script>
      // Ensure the DOM is fully loaded
      document.addEventListener('DOMContentLoaded', function () {
         const token = localStorage.getItem('token');
         const decodedToken = jwtDecode(token); // Decodes the JWT token

         // Assuming userId is a field in your token
         const userId = decodedToken.userId;
         if (userId) {
            // Set the href attribute with the userId
            const classroomLink = document.getElementById('classroomLink');
            const attemptLink = document.getElementById('attemptLink');
            classroomLink.href = `/classroom/teacher/${userId}`;
            attemptLink.href = `/attempt/list/${userId}`;
         }
      });
   </script>
 <script src="/public/js/profileDetail.js"></script>
 <script src="/public/js/logout.js"></script>
    <script src="/public/js/teacherRoleCheck.js"></script><!-- Check teacher role -->
    <script src="/public/js/tokenChecked.js"></script><!-- Check login -->
</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/public/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/public/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/public/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/public/favicon-16x16.png">
  <link rel="manifest" href="/public/site.webmanifest">
  <title>ลงทะเบียน</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <link rel="stylesheet" href="../public/css/register.css" />
  
  <style>
    
    .error-message {
      color: red;
      font-size: 0.875em;
      margin-top: 0.25em;
    }

    .input-group {
      position: relative;
    }

    .input-group .toggle-password {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
    }
    i {
  position: absolute;
  right: 10px;
  top: 42px;
  font-size: 16px;
  cursor: pointer;
  color: #939393;
}
  </style>
</head>

<body>
  <form id="registrationForm" action="/register" method="POST">
    <h2>ลงทะเบียน</h2>

    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="firstname">ชื่อ</label>
            <input type="text" class="form-control" name="firstname" id="firstname" placeholder="ชื่อ">
            <div class="error-message" id="firstnameError" style="color:red;"></div>
        </div>
        <div class="form-group col-md-6">
            <label for="lastname">นามสกุล</label>
            <input type="text" class="form-control" name="lastname" id="lastname" placeholder="นามสกุล">
            <div class="error-message" id="lastnameError" style="color:red;"></div>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-12">
            <label for="email">อีเมล</label>
            <input type="email" class="form-control" name="email" id="email" placeholder="Example@gmail.com">
            <div class="error-message" id="emailError" style="color:red;"></div>
        </div>
    </div>

    <div class="form-row">
      <div class="form-group col-md-6">
          <label for="password">รหัสผ่าน</label>
          <div class="password-wrapper">
              <input type="password" class="form-control" name="password" id="password" placeholder="รหัสผ่าน">
              <i id="pass-toggle-btn" class="fa-solid fa-eye toggle-password"></i>
          </div>
          <div class="error-message" id="passwordError" style="color:red;"></div>
      </div>
      <div class="form-group col-md-6">
          <label for="confirmPassword">ยืนยันรหัสผ่าน</label>
          <div class="password-wrapper">
              <input type="password" class="form-control" name="confirmPassword" id="confirmPassword" placeholder="ยืนยันรหัสผ่าน">
              <i id="confirm-pass-toggle-btn" class="fa-solid fa-eye toggle-password"></i>
          </div>
          <div class="error-message" id="confirmPasswordError" style="color:red;"></div>
      </div>
  </div>

    <div class="form-row">
        <div class="form-group col-md-12">
            <label for="school">โรงเรียน</label>
            <input type="text" class="form-control" name="school" id="school" placeholder="โรงเรียน">
            <div class="error-message" id="schoolError" style="color:red;"></div>
        </div>
    </div>

    <label for="role">กลุ่มผู้ใช้งาน</label>
    <select class="form-select" name="role" id="role">
        <option value="" selected disabled>เลือกกลุ่มผู้ใช้งาน</option>
        <option value="student">นักเรียน</option>
        <option value="teacher">คุณครู</option>
    </select>
    <div class="error-message" id="roleError" style="color:red;"></div>

    <div class="form-group submit-btn">
        <input type="submit" name="submit" value="ยืนยันการลงทะเบียน">
    </div>
    <div class="link-container">
        <a href="#" class="noAc" style="pointer-events: none; color: gray;">มีบัญชีแล้ว?</a>
        <a href="/login" class="link" style="text-decoration: none;">เข้าสู่ระบบ</a>
    </div>
</form>
<!-- trim check input -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <script>
    document.getElementById("password").addEventListener("keydown", function(event) {
        if (event.key === " ") {
            event.preventDefault(); 
        }
    });

    document.getElementById("password").addEventListener("paste", function(event) {
        let pastedText = (event.clipboardData || window.clipboardData).getData("text");
        if (pastedText.includes(" ")) {
            event.preventDefault(); 
        }
    });
</script>
  <script type="module">
    import z from 'https://cdn.jsdelivr.net/npm/zod@3.23.8/+esm';
    import Swal from 'https://cdn.jsdelivr.net/npm/sweetalert2@11/+esm';

    // Define the validation schema using Zod
    const formSchema = z.object({
      firstname: z.string().trim().min(1, 'กรุณากรอกชื่อ'),
      lastname: z.string().trim().min(1, 'กรุณากรอกนามสกุล'),
      email: z.string().trim().email('รูปแบบอีเมลไม่ถูกต้อง'),
      password: z.string()
        .min(8, 'รหัสผ่านต้องมีความยาวอย่างน้อย 8 ตัวอักษร')
        .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).*$/, 'รหัสผ่านจะต้องมีตัวพิมพ์ใหญ่ ตัวพิมพ์เล็ก และตัวเลข'),
      school: z.string().trim().min(1, 'กรุณากรอกชื่อโรงเรียน'),
      role: z.string().trim().min(1, 'กรุณาเลือกกลุ่มผู้ใช้งาน'),
    });

    // Automatically trim whitespace from inputs (excluding password)
    document.querySelectorAll('input:not([name="password"]), select').forEach(input => {
      input.addEventListener('input', function () {
        this.value = this.value.trim();
      });
    });

    // Toggle visibility for password fields
document.getElementById('pass-toggle-btn').addEventListener('click', function () {
  const passwordInput = document.getElementById('password');
  const type = passwordInput.type === 'password' ? 'text' : 'password';
  passwordInput.type = type;
  this.classList.toggle('fa-eye-slash');
  this.classList.toggle('fa-eye');
});

document.getElementById('confirm-pass-toggle-btn').addEventListener('click', function () {
  const confirmPasswordInput = document.getElementById('confirmPassword');
  const type = confirmPasswordInput.type === 'password' ? 'text' : 'password';
  confirmPasswordInput.type = type;
  this.classList.toggle('fa-eye-slash');
  this.classList.toggle('fa-eye');
});

    document.getElementById('registrationForm').addEventListener('submit', async function (e) {
  e.preventDefault(); 

  
  document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

 
  const formData = {
    firstname: document.querySelector('input[name="firstname"]').value,
    lastname: document.querySelector('input[name="lastname"]').value,
    email: document.querySelector('input[name="email"]').value,
    password: document.querySelector('input[name="password"]').value, 
    confirmPassword: document.querySelector('input[name="confirmPassword"]').value,
    school: document.querySelector('input[name="school"]').value,
    role: document.querySelector('select[name="role"]').value,
  };

  // Check if password and confirmPassword match
  if (formData.password !== formData.confirmPassword) {
    Swal.fire({
      title: 'รหัสผ่านไม่ตรงกัน',
      text: 'กรุณาตรวจสอบรหัสผ่านและยืนยันรหัสผ่านให้ตรงกัน',
      icon: 'error',
      confirmButtonText: 'ตกลง'
    });
    return; 
  }

  // Validate the form data using Zod
  const result = formSchema.safeParse(formData);

  if (!result.success) {
    result.error.errors.forEach(error => {
      document.getElementById(`${error.path[0]}Error`).textContent = error.message;
    });
  } else {
    // Send form data to the endpoint using Axios
    try {
      const response = await axios.post('/register', formData, {
        headers: { 'Content-Type': 'application/json' },
      });

      // Show success alert
      Swal.fire({
        title: 'ลงทะเบียนสำเร็จ',
        icon: 'success',
        confirmButtonText: 'ตกลง'
      }).then(() => {
        window.location.replace("https://stdslearning.com/login");
      });

    } catch (error) {
      console.error('Error during registration:', error);
      Swal.fire({
        title: 'เกิดข้อผิดพลาด',
        text: error.response?.data?.error || 'โปรดลองอีกครั้ง',
        icon: 'error',
        confirmButtonText: 'ตกลง'
      });
    }
  }
});

</script>
</body>

</html>
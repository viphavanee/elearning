<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/public/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/public/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/public/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/public/favicon-16x16.png">
  <link rel="manifest" href="/public/site.webmanifest">
  <title>เปลี่ยนรหัสผ่าน</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <link rel="stylesheet" href="./public/css/register.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/jwt-decode@4.0.0/build/cjs/index.min.js"></script>
</head>

<body>

  <form id="changePasswordForm">
    <h2>เปลี่ยนรหัสผ่าน</h2>
    <div class="form-group password">
      <label for="oldPassword">รหัสผ่านเดิม</label>
      
        <input type="password" class="form-control" name="oldPassword" id="oldPassword" placeholder="รหัสผ่านเดิม" required>
       
          <i id="toggleOldPassword" class="fa-solid fa-eye pass-toggle-btn"></i>
     
     
    </div>
    
    <div class="form-group password">
      <label for="newPassword">รหัสผ่านใหม่</label>
      
        <input type="password" class="form-control" name="newPassword" id="newPassword" placeholder="รหัสผ่านใหม่" required>
        
          <i id="toggleNewPassword" class="fa-solid fa-eye pass-toggle-btn"></i>
       
      
    </div>
    
    <div class="form-group password">
      <label for="cfNewPassword">ยืนยันรหัสผ่านใหม่</label>
    
        <input type="password" class="form-control" name="cfNewPassword" id="cfNewPassword" placeholder="ยืนยันรหัสผ่านใหม่" required>
        
          <i id="toggleCfNewPassword" class="fa-solid fa-eye pass-toggle-btn"></i>
        
      
    </div>
    
    <div class="form-group submit-btn">
      <input type="submit" name="submit" value="เปลี่ยนรหัสผ่าน" />
    </div>
  </form>
  

  <script src="/public/js/scrptForSS.js"></script>
  <script src="./public/js/script.js"></script>
  <script src="/public/js/userLogin.js"></script>
  
  <script>
    document.getElementById('changePasswordForm').addEventListener('submit', function (e) {
      e.preventDefault(); // Prevent the default form submission

      const oldPassword = document.getElementById('oldPassword').value;
      const newPassword = document.getElementById('newPassword').value;
      const cfNewPassword = document.getElementById('cfNewPassword').value;

      // Validate that new password and confirm password match
      if (newPassword !== cfNewPassword) {
        Swal.fire({
          icon: 'error',
          title: 'ข้อผิดพลาด',
          text: 'รหัสผ่านใหม่และยืนยันรหัสผ่านใหม่ไม่ตรงกัน'
        });
        return;
      }

      const token = localStorage.getItem('token'); // Assuming your token key is 'token'
      const decodedToken = jwtDecode(token); // Adjust this according to your token structure
      const userId = decodedToken.userId; // Assuming userId is a field in your token

      fetch(`/change-password/${userId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json' // Set the content type to JSON
        },
        body: JSON.stringify({ oldPassword, newPassword })
      })
        .then(response => response.json())
        .then(data => {
          // Show SweetAlert with the message from the server
          if (data.message) {
            Swal.fire({
              icon: 'success',
              title: 'สำเร็จ',
              text: data.message,
              showCancelButton: false, // Do not show a cancel button
              confirmButtonText: 'ตกลง' // "Accept" button text
            }).then((result) => {
              if (result.isConfirmed) {
                // Remove the token from localStorage
                localStorage.removeItem('token');

                // Navigate to the login page
                window.location.href = '/login';
              }
            });
          } else if (data.error) {
            Swal.fire({
              icon: 'error',
              title: 'ข้อผิดพลาด',
              text: data.error
            });
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'ข้อผิดพลาด',
            text: 'เกิดข้อผิดพลาดขณะดำเนินการ'
          });
        });
    });
  </script>
 
 <script>
  function togglePassword(inputId, toggleIconId) {
  const input = document.getElementById(inputId);
  const toggleIcon = document.getElementById(toggleIconId);

  toggleIcon.addEventListener('click', () => {
    const isPassword = input.type === 'password';
    input.type = isPassword ? 'text' : 'password';
    toggleIcon.classList.toggle('fa-eye');
    toggleIcon.classList.toggle('fa-eye-slash');
  });
}

// เรียกใช้ฟังก์ชัน toggle กับ input ที่ต้องการ
togglePassword('oldPassword', 'toggleOldPassword');
togglePassword('newPassword', 'toggleNewPassword');
togglePassword('cfNewPassword', 'toggleCfNewPassword');

 </script>
</body>

</html>